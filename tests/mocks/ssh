#!/usr/bin/env python
import sys
import time
from box import Box
import cmdy
from pyparam import params

if len(sys.argv) == 1:
	sys.stderr.write("Mock ssh command for PyPPL testing.")

server = sys.argv[1]

params.i.desc = 'The key.'
params.o.type = str
params.o.desc = 'The ssh configurations.'
params._.type = str
params._.desc = 'The command to run on ssh.'
if server.startswith('-'):
	opts = params._parse(sys.argv[1:], arbi=True, dict_wrapper=Box)
	server = opts.pop('t', None)
	if not server:
		raise ValueError('No server found.')
else:
	opts = params._parse(sys.argv[2:], arbi=True, dict_wrapper=Box)

# key = host+10 will be used as key = host and sleep 10 seconds
opts.i = opts.i or ''
if '+' not in opts.i:
	opts.i += '+0'
opts.i, sleep = opts.i.split('+', 1)

if sleep:
	sleep = float(sleep)
	time.sleep(sleep)

# let's make a match for key and host here
if opts.i and server != opts.i:
	sys.stderr.write('Server and key do not match!\n')
	sys.exit(1)

# We testing whether server is running
if opts._ and opts._[0] == 'true':
	sys.exit(0)

# Now let's run the command
cmdy.bash(c = opts._, _fg = True)
